name: Rust Tests

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    # This matrix is not necessary for Linting, but this keeps
    # the configuration more uniform across the three workflows.
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      ## Below this line to the designated comment is uniform across rust-test.yml and lint.yml!
      - name: Checkout Code
        uses: actions/checkout@v2

      ### INSTALL RUST ###
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          # In theory, this line can be removed in the non-lint workflow.
          components: rustfmt, clippy
          override: true

      ## INSTALL NODE AND NPM
      - name: Install Node and npm
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      ### BUILD CACHE ###
      - name: Cache cargo registry, target, index
        uses: actions/cache@v2
        id: cache-cargo-v3
        env:
          cache-name: cache-cargo-v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/bin
            ~/.cargo/git
            target
          key: ${{ matrix.build }}-${{ env.cache-name }}-${{ steps.toolchain.outputs.rustc_hash }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.build }}-${{ env.cache-name }}-${{ steps.toolchain.outputs.rustc_hash }}-rust-${{ hashFiles('**/Cargo.lock') }}
            ${{ matrix.build }}-${{ env.cache-name }}-${{ steps.toolchain.outputs.rustc_hash }}-
            ${{ matrix.build }}-${{ env.cache-name }}-
            ${{ matrix.build }}-

      - name: Cache npm
        uses: actions/cache@v2
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ matrix.build }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.build }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            ${{ matrix.build }}-${{ env.cache-name }}-

      ### UP FROM HERE TO "Checkout Code" is  uniform in rust-test.yml and lint.yml!

      - name: Install npm dependencies
        run: npm install

      ### RUN TESTS
      - name: Test (cargo test)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--workspace --locked -- --nocapture"
        env:
          RUST_LOG: debug
          RUST_BACKTRACE: 1
